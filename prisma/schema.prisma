// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Student {
  student_id Int      @id @default(autoincrement())
  first_name String
  last_name  String
  email      String?
  password   String
  dob        DateTime
  photo_url  String
  created_at DateTime @default(now()) @db.Timestamp()
  updated_at DateTime @default(now()) @db.Timestamp()

  notes Notes[]
}

model Teacher {
  teacher_id Int      @id @default(autoincrement())
  first_name String
  last_name  String
  email      String
  password   String
  dob        DateTime
  photo_url  String
  created_at DateTime @default(now()) @db.Timestamp()
  updated_at DateTime @default(now()) @db.Timestamp()

  video_detail Video_Details[]
}

model Video_Details {
  id          Int      @id @default(autoincrement())
  teacher_id  Int
  url         String
  title       String
  description String
  created_at  DateTime @default(now()) @db.Timestamp()
  updated_at  DateTime @default(now()) @db.Timestamp()

  //Relation
  teacher Teacher @relation(fields: [teacher_id], references: [teacher_id], onDelete: Cascade)
}

model Notes {
  id          Int      @id @default(autoincrement())
  student_id  Int
  title       String
  description String
  url         String
  created_at  DateTime @default(now()) @db.Timestamp()
  updated_at  DateTime @default(now()) @db.Timestamp()
  
  //Relation
  student     Student  @relation(fields: [student_id], references: [student_id], onDelete: Cascade)
}
